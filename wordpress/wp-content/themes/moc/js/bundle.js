"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function blog(){if($(".blog-wrap").length||$(".single-blogpost-wrap").length||$(".search").length){var e=document.documentElement.clientWidth,t=6,o=!1,a={config:{subscribeBlock:$("#subscribe-block"),subscribeLink:$('[data-open-menu="subscribe"]'),subscribeCloseLink:$("#subscribe-close-btn"),subscribeBtn:$("#subscribe-btn"),subscribeEmailField:$("#subscribe-block").find('input[type="email"]'),nav:$("#top_bar").find("ul.get-in-touch-wrapper"),search:$(".search-overlay"),subscribeWindow:$(window),subscribeBody:$("body"),searchBtn:$("#top_bar").find("#search-nav"),loadMore:$("#load-more-posts"),blogList:$("#blog-list"),socialWrap:$("#post-social"),topSocialWrap:$("#top-post-social"),facebookSvg:"<svg aria-label='Share to Facebook'><use xlink:href='#social-facebook'></use></svg>",twitterSvg:"<svg aria-label='Share to Twitter'><use xlink:href='#social-twitter'></use></svg>",linkedinSvg:"<svg aria-label='Share to Linkedin'><use xlink:href='#social-linkedin'></use></svg>",googleSvg:"<svg aria-label='Share to Google'><use xlink:href='#social-google'></use></svg>",feedbackForm:$("#feedback_form"),feedbackBlock:$("#feedback_form").find(".feedback-block"),feedbackControlsBlock:$("#feedback-conrols-wrapper")},unFocusSubscribe:function(){var t=document.documentElement.clientWidth;t!==e&&(a.config.subscribeEmailField.blur(),e=t),a.config.subscribeBlock.hasClass("menu-opened")&&($('[data-menu="main"]').removeClass("menu-opened").addClass("menu-closed"),a.config.subscribeBlock.removeClass("menu-closed"),a.config.subscribeBody.addClass("with-menu-opened"))},addSearch:function(){this.config.nav.prepend("<li class='search'><a href='#' id='search-nav' data-open-menu='search'><svg aria-label='Search'><use xlink:href='#search-icon'></use></svg></a></li>"),this.config.searchBtn=$("#search-nav"),this.config.searchCloseBtn=$("#search-close-btn"),this.config.searchIcon=$("#search-icon")},preLoadPosts:function(){var e=parseInt(window.location.hash.substring([1]));e>7&&(t=e-7,a.ajaxPostsLoader())},ajaxPostsLoader:function(){a.showOverlay(),void 0!==("undefined"==typeof blogVars?"undefined":_typeof(blogVars))&&(blogVars.ajaxUrl=$("#blog-vars").html());var e=a.config.blogList.find("li").length;$.ajax({type:"POST",url:blogVars.ajaxUrl,data:{action:"load_posts",from_num:e,count:t},success:function(e){e=JSON.parse(e),a.loadMoreSuccess(e)}})},loadMore:function(e){e.preventDefault(),t=6,a.ajaxPostsLoader()},loadMoreSuccess:function(e){a.preloadImages(e.images,"addNewPosts",e)},addNewPosts:function(e){e&&a.config.blogList.append(e.html),e&&!e.posts_end||a.config.loadMore.hide(),a.hideOverlay(),window.location.hash=a.config.blogList.find("li").length},preloadImages:function(e,t,o){var n,i=[],s=0,r=e.length;for(n=0;n<r;n++)i[n]=new Image,i[n].onload=function(){r===++s&&a.addNewPosts(o)},i[n].onerror=function(){a.hideOverlay(),a.config.loadMore.hide()},i[n].src=e[n]},showOverlay:function(){$("#load-more-posts").addClass("with-loader")},hideOverlay:function(){$("#load-more-posts").removeClass("with-loader")},addSocialSvg:function(){function e(e){e.find(".ssba_facebook_share").append(a.config.facebookSvg),e.find(".ssba_twitter_share").append(a.config.twitterSvg),e.find(".ssba_linkedin_share").append(a.config.linkedinSvg),e.find(".ssba_google_share").append(a.config.googleSvg)}a.config.socialWrap.length&&e(a.config.socialWrap),a.config.topSocialWrap.length&&e(a.config.topSocialWrap),function(e){var t,a=window,n=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),i=(a.innerWidth,a.innerHeight),s=(a.pageYOffset,document.body.getBoundingClientRect().height),r=document.querySelector(".main-footer").offsetHeight,d=s-r-i;if(n)return;function c(){a.innerWidth,i=a.innerHeight,a.pageYOffset,s=document.body.offsetHeight,r=document.querySelector(".main-footer").offsetHeight,d=s-r-i}function l(e,t,a,n){e<t||e>a?o&&(n.addClass("invisible"),o=!1):o||(n.removeClass("invisible"),c(),o=!0)}a.addEventListener("scroll",function(t){l(a.pageYOffset,i,d,e)}),a.addEventListener("resize",function(){clearTimeout(t),t=setTimeout(function(){c(),l(a.pageYOffset,i,d,e)},150)})}(a.config.socialWrap)},fixTargetBlank:function(){(navigator.userAgent.indexOf("FBAN")>-1||navigator.userAgent.indexOf("FBAV")>-1)&&$(".blog-post-content").find("a").each(function(){this.removeAttribute("target")})},highlightCode:function(){setTimeout(function(){$("p code").each(function(e,t){hljs.highlightBlock(t)})},1e3)},showFeedback:function(){var e;getCookie("feedback"+$("#post_id").val())?(e="feedback-responded",this.config.feedbackControlsBlock.html("")):e="feedback-visible",this.config.feedbackBlock.addClass(e)},init:function(){this.addSearch(),this.config.subscribeWindow.on("resize",this.unFocusSubscribe),this.config.loadMore.on("click",this.loadMore),this.addSocialSvg(),this.preLoadPosts(),this.fixTargetBlank(),this.highlightCode(),this.showFeedback()}};a.init(),$("#negative-submit").click(function(){$("form.blog_feedback").find("#feedback_type").val("No")}),$("#feedback-content").on("keyup",function(){""==this.value?$(".grey-btn").addClass("disabled").attr("disabled",!0):$(".grey-btn").removeClass("disabled").attr("disabled",!1)}),$("#feedback-content").on("blur",function(){""==this.value?($(this).removeClass("filled"),$(".grey-btn").addClass("disabled").attr("disabled",!0)):$(this).addClass("filled")}),$(document).on("click",'[data-send="feedback"]',function(e){e.preventDefault(),$(".feedback-btn").addClass("disabled").attr("disabled",!0),$('[data-send="feedback"]').addClass("disabled").attr("disabled",!0),$("body").removeClass("with-menu-opened");var t=window.location.origin,o=$("form.blog_feedback"),a=o.find("#post_id").val(),n=o.find("#feedback_type").val(),i=o.find("#feedback-content").val(),s=o.find(".post-title").val(),r=o.find(".feedback_info").val(),d=o.find(".feedback_ip").val(),c=o.find(".email-list").val();return i.length>600&&(i=i.substring(0,599)),$(".feedback-block").addClass("feedback-done"),$('[data-popup="feedback"]').removeClass("popup-fixed"),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&$("html, body").animate({scrollTop:$("#feedback_form").offset().top-200},800),$.ajax({type:"POST",url:t+"/wp-admin/admin-ajax.php",data:{post_id:a,feedback_like:n,feedback_content:i,post_title:s,feedback_info:r,feedback_ip:d,email_list:c,action:"save_feedback"}}).done(function(){}).fail(function(){console.log("something happened - feedback didn't sent:(")}).always(function(){if(document.cookie){var e=$("#post_id").val();void 0!==e&&(document.cookie="feedback"+e+"=true")}}),!1})}}function getCookie(e){for(var t=e+"=",o=decodeURIComponent(document.cookie).split(";"),a=0;a<o.length;a++){for(var n=o[a];" "==n.charAt(0);)n=n.substring(1);if(0==n.indexOf(t))return n.substring(t.length,n.length)}return""}function cf7Scripts(){function e(e){var t=document.querySelector('label[for="'+e.getAttribute("id")+'"]');null!==t&&(t.classList.remove("unfocus-label"),$(e).hasClass("wpcf7-textarea")&&$(".embedded-to-description").length&&$(".embedded-to-description").addClass("small"))}function t(e){var t=document.querySelector('label[for="'+e.getAttribute("id")+'"]');null!==t&&(""===e.value?(e.classList.remove("filled"),t.classList.add("unfocus-label"),$(e).hasClass("wpcf7-textarea")&&$(".embedded-to-description").length&&$(".embedded-to-description").removeClass("small")):(e.classList.add("filled"),t.classList.remove("unfocus-label")))}$(document).ready(function(){var o=$("main").find("form");if($(".gform_wrapper").length){$(".gform_wrapper").attr("id");var a=document.querySelectorAll(".wpcf7-form-control");try{for(var n=0;n<a.length;n++){var i=a[n];t(i),i.addEventListener("focus",function(){e(this)}),i.addEventListener("blur",function(){t(this)})}}catch(e){console.log("not supported"),$(".label").addClass("unfocus-label")}null!==document.querySelector(".page-contacts")&&(o.attr("id","gform_1"),o.attr("name","contact-form")),null!==document.querySelector(".home")&&(o.attr("name","home-form"),o.attr("id","gform_7")),null!==document.querySelector(".page-chatbots")&&(o.attr("name","chatbots-form"),o.attr("id","gform_11")),"#estimate-project-form"===window.location.hash&&($(".contact-form-wrapper").find('input[type="checkbox"]').trigger("click"),window.location.hash="");var s="embedded-to-description";$("."+s).length||(s="upload-file"),addFileUploadForm(s),$("#form_location").length&&$("#form_location").val($("#career-location").html())}$(".wpcf7").length&&document.querySelector(".wpcf7").addEventListener("wpcf7submit",function(e){if(!$(".wpcf7-not-valid-tip").length){$(".js-hide-after-submit").addClass("submitted"),updateUserInCRM(o);var t={1:"ContactSubmit",7:"HomepageSubmit"},a=0;$("#contact-form").length?a=1:$("#homepage-form").length&&(a=7);var n=$(".contact-form-wrapper").offset().top,i=$("#top_bar"),s=i.length?i.height():0,r=n-s>0?n-s:0;$(".js-hide-after-submit").length&&$(".js-hide-after-submit").addClass("hidden"),$("html, body").animate({scrollTop:r},300),t[a]&&"undefined"!=typeof yaCounter32175069&&yaCounter32175069.reachGoal(t[a])}},!1);$("[data-metrix]").click(function(){var e=this.getAttribute("href");prepareLeadForSend({email_clicked:this.getAttribute("data-metrix")+" ("+e+")",email_to_send:e})})})}function getFromStorage(e){var t="unknown";if("undefined"!=typeof sessionStorage)try{sessionStorage&&null!==sessionStorage.getItem(e)&&(t=sessionStorage.getItem(e))}catch(e){console.log("storage does not support")}return t}function updateUserInCRM(e){if(!$(".careers-page").length&&!$(".single-career-page").length){for(var t=["your-name","email","phone","description","address","company"],o={},a=0;a<t.length;a++)null==document.getElementById(t[a])?o[t[a]]="":o[t[a]]=document.getElementById(t[a]).value;console.log("update in crm"),prepareLeadForSend(o)}}function addFileUploadForm(e){var t=$("span."+e);if(t.length>0){$(".wpcf7-form-control-wrap.description").length?$(".wpcf7-form-control-wrap.description").append('<span id="file-name" class="bottom-position"></span>'):t.append('<span id="file-name"></span>'),t.append('<button id="file-upload"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18.25 18.25" aria-label="Upload File"><path fill-rule="evenodd" d="M725.048,5233.58h-7.821v7.82H714.62v-7.82H706.8v-2.6h7.821v-7.82h2.607v7.82h7.821v2.6Z" transform="translate(-706.813 -5223.16)"/></svg></button>'),t.append('<span class="validation_message"></span>');var o=t[0].querySelector('input[type="file"]'),a=t.find('input[type="file"]')[0],n=document.getElementById("file-name"),i=$('label[for="'+$(a).attr("id")+'"]'),s=t.find(".ginput_preview"),r=s.find("strong").html();a.setAttribute("aria-hidden","true"),a.setAttribute("tabindex","-1"),void 0!==r&&r.length>0&&(t.addClass("uploaded"),n.innerHTML=r,i.addClass("focus-fixed-label")),t.on("click","#file-upload",function(e){e.preventDefault(),a.value="",t.removeClass("uploaded"),n.innerHTML="",i.removeClass("focus-fixed-label").addClass("unfocus-label"),o.value="",s.find(".gform_delete").trigger("click")}),t.on("change",'input[type="file"]',function(e){a=$(t).find('input[type="file"]');var o=t.find(".validation_message").html();if(o.length>2)n.innerHTML='<span style="color: red">'+o+"</span>",t.find(".validation_message").innerHtml="",t.addClass("uploaded");else{var s="";this.files&&(s=e.target.value.split("\\").pop()),s&&(t.addClass("uploaded"),n.innerHTML=s,i.addClass("focus-fixed-label"))}}),t.on("blur",'input[type="file"]',function(e){setTimeout(function(){var e=t.find(".validation_message")[0].innerHTML;e.length>2&&(document.getElementById("file-name").innerHTML='<span style="color: red">'+e+"</span>",t.find(".validation_message").innerHtml="",t.addClass("uploaded"))},2e3)})}}function prepareLeadForSend(e){var t="direct",o=getFromStorage("referrer"),a=getFromStorage("ads"),n=getFromStorage("visited"),i=["google","bing","duckduckgo","yahoo","ask.com","AOL","aol.com","baidu","wolframalpha","chacha.com"];if(location.search.indexOf("type")>=1||"ads"===a)t="ads";else if(""===o||void 0===o)t="direct";else{for(var s="",r=0;r<i.length;r++)o.indexOf(i[r])>-1&&(s=i[r]);s.length>0?t="search("+s+")":-1===window.parent.location.href.indexOf(o)&&-1===o.indexOf(window.parent.location.href)&&(t="ref("+o+")")}e.channel=t,e.visited=n;var d="Desktop";(window.navigator.userAgent.match(/Mobile/i)||window.navigator.userAgent.match(/iPhone/i)||window.navigator.userAgent.match(/iPod/i)||window.navigator.userAgent.match(/IEMobile/i)||window.navigator.userAgent.match(/Windows Phone/i)||window.navigator.userAgent.match(/Android/i)||window.navigator.userAgent.match(/BlackBerry/i)||window.navigator.userAgent.match(/webOS/i))&&(d="Mobile"),(window.navigator.userAgent.match(/Tablet/i)||window.navigator.userAgent.match(/iPad/i)||window.navigator.userAgent.match(/Nexus 7/i)||window.navigator.userAgent.match(/Nexus 10/i)||window.navigator.userAgent.match(/KFAPWI/i))&&(d="Tablet"),e.device=d;var c=!1;document.cookie&&getCookie("first_visit")?getCookie("first_visit=true")&&(document.cookie="first_visit=false"):document.cookie&&(document.cookie="first_visit=true",c=!0),e.first_visit=c,e.form_location=window.location.href;var l="",u="";null!==document.getElementById("client_city")&&(l=document.getElementById("client_city").innerHTML),null!==document.getElementById("client_country")&&(u=document.getElementById("client_country").innerHTML),e.city=l,e.country=u,e.email_to_send="",sendToProsper(e)}function sendToProsper(e){var t=window.location.origin;e.action="save_to_prosper",$.ajax({type:"POST",url:t+"/wp-admin/admin-ajax.php",data:e}).done(function(){console.log("lead datas sent to prosper")}).fail(function(){console.log("prosper lead didn't created(")})}function careers(){$(document).ready(function(){if($("#apply-job").length){var e={config:{social:$("#social"),facebookSvg:"<svg><use xlink:href='#social-facebook'></use></svg>",twitterSvg:"<svg><use xlink:href='#social-twitter'></use></svg>",linkedinSvg:"<svg><use xlink:href='#social-linkedin'></use></svg>",googleSvg:"<svg><use xlink:href='#social-google'></use></svg>",applyJobLink:$("[data-apply-job]"),applyJob:$("#apply-job"),topBar:$("#top_bar")},addSocialSvg:function(){this.config.social.length&&(this.config.social.find(".ssba_facebook_share").append(this.config.facebookSvg),this.config.social.find(".ssba_twitter_share").append(this.config.twitterSvg),this.config.social.find(".ssba_linkedin_share").append(this.config.linkedinSvg),this.config.social.find(".ssba_google_share").append(this.config.googleSvg))},applyJobHandler:function(t){t.preventDefault(),$("[data-menu]").removeClass("menu-opened"),$("body").removeClass("with-menu-opened"),$("html, body").animate({scrollTop:e.config.applyJob.offset().top-e.config.topBar.height()},1e3)},init:function(){this.config.applyJobLink.on("click",this.applyJobHandler),e.addSocialSvg()}};e.init()}})}function searchPhrase(e){e.length>=2?jQuery.ajax({url:BASE+"/wp-admin/admin-ajax.php",type:"POST",data:{action:"ajax_search",term:e},success:function(e){jQuery(".displayed-ajax-search").fadeIn().html(e),jQuery(".count").fadeIn(),jQuery(".displayed-search-phrases").addClass("hidden"),jQuery(".search-spinner").hide()}}):e.length<=2&&(jQuery(".search-spinner").hide(),jQuery(".displayed-ajax-search").append("<span class='search-error'>Nothing found, please, enter at least 2 characters</span>"))}blog(),home(),chatbots(),careers(),portfolio(),projectSlider(),scripts(),popups(),cf7Scripts(),$(function(){$(".search-field").keypress(function(e){13==(e.keyCode||e.which)&&(e.preventDefault(),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&$("#search-field").blur())})}),$(document).ready(function(){if($(".page-design").length){var e,t=$(window),o=1,a=t.innerHeight,n=t.innerWidth,i=window.mobileBrowser,s=!1,r=!1,d=!1;({config:{background:$(".background"),midground:$(".midground"),foreground:$(".foreground"),getInTouchBtn:$("[data-get-in-touch]"),customScrollBtn:$("[data-custom-scroll]")},setupAnimation:function(){e=$("#wrapper1").offset().top-51,(window.navigator.userAgent.indexOf("Edge")>-1||window.navigator.userAgent.indexOf("rv:11")>-1)&&(s=!0),i?this.setupMobileAnimation():this.setupDesktopAnimation()},animateSlides:function(){var e=new ScrollMagic.Controller,t=document.querySelectorAll(".animation-slide"),o=[],a=[],n=[],r=[];if(!i){for(var d=0;d<t.length;d++){var c=d+1;o[d]=(new TimelineMax).fromTo($("#text-part"+c),1,{y:"0"},{y:"-50%",ease:Linear.easeOut,force3D:!0}),a[d]=new TweenMax.to($("#text-part"+c),1,{y:"-50%",ease:Linear.easeOut}),o[d].add(a[d],0),n[d]=new TweenMax.to($("#img-part"+c+" .sliding-part"),1,{height:"0",ease:Linear.easeOut}),o[d].add(n[d],0),r[d]=new ScrollMagic.Scene({triggerElement:"#wrapper"+c,triggerHook:0,duration:"100%",offset:-0}).setPin("#wrapper"+c).setTween(o[d]).addTo(e),r[d].on("start",function(e){var t=this.triggerElement(),o=$(t).find(".animated-part__wrapper");"REVERSE"===e.scrollDirection?o.css("position",""):o.css("position","fixed")}),r[d].on("end",function(e){var t=this.triggerElement(),o=$(t).find(".animated-part__wrapper");"FORWARD"===e.scrollDirection?"animation2"!==o.attr("id")&&o.css("position",""):o.css("position","fixed")})}if(!s&&!i)for(var l=document.querySelectorAll("#wrapper2"),u=new ScrollMagic.Controller,f=0;f<l.length;f++)new ScrollMagic.Scene({triggerHook:0,triggerElement:l[f]}).setPin(l[f]).addTo(u)}},setupDesktopAnimation:function(){var e,o=this;setTimeout(function(){o.fixImages("img-fg")},150),t.on("resize",function(t){var o=this;clearTimeout(e),e=setTimeout(function(){o.fixImages("img-fg")},250)}),this.ParallaxEffect()},setupMobileAnimation:function(){var e;this.ParallaxEffect(),c(),t.on("resize",function(t){clearTimeout(e),e=setTimeout(function(){c()},250)})},ParallaxEffect:function(){var o=[];o.push(this.config.foreground,this.config.midground),i||o.push(this.config.background);var a=t.scrollTop();r=a<e,a<e&&d&&setTimeout(function(){d=!1},100),r?this.setPosition(a,o):(r=!1,d||(d=!0,this.setPosition(5e3,o))),window.requestAnimationFrame(this.ParallaxEffect.bind(this))},setPosition:function(e){for(var t=arguments[1],o=0;o<t.length;o++){var a=o/2+1.05;t[o].attr("style","transform: translate3d(0, -"+parseInt(e/a)+"px, 0);-webkit-transform: translate3d(0, -"+parseInt(e/a)+"px, 0);")}},fixImages:function(t){var o,s,r,d=document.querySelectorAll("."+t),c=!0;if(n<a&&(c=!1),e=$("#wrapper1").offset().top-40+1,!i)for(var l=0;l<d.length;l++)o=0,r=0,0,s=$(d[l]).closest(".img-wrapper-part").height(),c&&(r=(s-(o=$(d[l]).height()))/2>0?parseInt((s-o)/2):0),$(d[l]).css({marginTop:r})},goToForm:function(e){e.preventDefault(),$("[data-menu]").removeClass("menu-opened"),$("body").removeClass("with-menu-opened"),$("html, body").animate({scrollTop:$("#estimate-project-form").offset().top-40},800)},customScroll:function(e){e.preventDefault();var t,o=$(this).attr("data-custom-scroll");t=$(this)[0].hasAttribute("data-bottom")?$("#"+o).offset().top+$("#"+o).height():$("#"+o).offset().top-0,$("html, body").animate({scrollTop:t},1600)},init:function(){this.setupAnimation(),i||this.animateSlides(),this.config.getInTouchBtn.on("click",this.goToForm),this.config.customScrollBtn.on("click",this.customScroll)}}).init()}function c(){screen.height;var e=document.documentElement.clientHeight;(e/o<=.75||o/e<=.75)&&($(".js-full-height").css("height",e),o=e)}});var delay=function(){var e=0;return function(t,o){clearTimeout(e),e=setTimeout(t,o)}}();function home(){if(null!==document.querySelector(".launch-page")){var e,t=1,o=$("#scroll-arrow"),a=!1;if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<800){v(),window.addEventListener("resize",function(e){v()});var n=document.getElementById("bgvideo"),i=$(".bg-video-wrapper");null!=n&&(n.setAttribute("src",""),i.css("display","none")),a=!0,$("#infographics").length&&$("#infographics").find(".js-counter").addClass("js-counter finished")}if($(".testimonial-slider").length){e=null!=$("[data-pause]")&&$("[data-pause]").length?""+1e3*parseInt($("[data-pause]")[0].getAttribute("data-pause")):"5000";var s=$("#testimonial-slider"),r={margin:0,loop:!0,nav:!1,dots:!1,items:1,autoplay:!0,animateOut:"fadeOut",animateIn:"fadeIn",lazyLoad:!0,lazyLoadEager:1};r.onInitialize=void $("."+"testimonials-pager__item"+'[data-dote="0"]').addClass("active"),r.autoplayTimeout=e,s.owlCarousel(r),s.on("translated.owl.carousel",function(e){var t,o;t="testimonials-pager__item",o=parseInt(s.find(".owl-item.active .item").attr("data-dote")),$("."+t).removeClass("active").removeClass("done"),$("."+t+'[data-dote="'+o+'"]').addClass("active")}),s.on("dragged.owl.carousel",function(e){!function(e,t){t.removeClass("left").removeClass("right"),$("."+e).removeClass("active");var o=$(".owl-item.active").find(".project-slide").attr("data-dote");$("."+e).hasClass("stopped")&&t.trigger("play.owl.autoplay",[5e3]);$("."+e+'[data-dote="'+o+'"]').addClass("active stopped"),t.trigger("stop.owl.autoplay")}("testimonials-pager__item",s)}),$(".testimonials-pager__item").click(function(){!function(e,t,o){$("."+e).removeClass("active"),o.trigger("to.owl.carousel",[t.index(),300]),$("."+e).hasClass("stopped")&&o.trigger("play.owl.autoplay",[5e3]);t.addClass("active stopped"),o.trigger("stop.owl.autoplay")}("testimonials-pager__item",$(this),s)})}$("[data-get-in-touch]").on("click",function(e){e.preventDefault(),$("[data-menu]").removeClass("menu-opened"),$("body").removeClass("with-menu-opened"),$("html, body").animate({scrollTop:$("#estimate-project-form").offset().top-40},800)}),$("#fixed-logo-wrapper").click(function(e){e.preventDefault(),$(this).addClass("logo-mocadellic"),setTimeout(function(){$("#fixed-logo-wrapper").removeClass("logo-mocadellic")},3e3)});var d=$("#top_bar"),c=$(".header-wrapper").offset().top,l=!1,u=$(window);o.on("click",function(e){e.preventDefault(),$("html, body").animate({scrollTop:$("#services-top").offset().top+5},800)});var f=u.scrollTop(),p=f>c;p&&!l&&(l=!0,d.addClass("top-fixed-header")),$("[data-counter]").length||a?($("#infographics").find(".js-counter").addClass("js-counter finished"),a=!0):a=!1,u.scroll(function(){f=u.scrollTop(),(p=f>c)&&!l?(l=!0,d.addClass("top-fixed-header")):!p&&l&&(l=!1,d.removeClass("top-fixed-header")),!a&&$("#infographics").length&&m(f,"infographics",500)});var g=function(e,t,o){var a=parseInt(e.innerHTML);if(isNaN(a)||a<1)e.className="js-counter finished";else{var n=0,i=parseInt(o/a),s=1;i<4&&(i=4,s=parseInt(4*a/o));setTimeout(function(){!function t(){e.className="js-counter counted",setTimeout(function(){(n+=s)>=a?(e.innerHTML=""+a,e.className="js-counter finished"):(e.innerHTML=""+n,t())},i)}()},t*o)}},m=function(e,t,o){if(void 0!==$("#"+t)&&null!==$("#"+t)){var n=$("#"+t).offset().top;if(n-window.innerHeight<e&&n>e&&!a){var i=h(t);a=!0;for(var s=0;s<i.length;s++){var r=document.getElementById(i[s]);$("#"+i[s]).addClass("pre-count"),g(r,s,o)}}}else a=!0},h=function(e){var t=[];return $("#"+e).find(".js-counter").each(function(){t.push(this.getAttribute("id"))}),t};!function e(){window.requestAnimationFrame(e),f=u.scrollTop(),(p=f>c)&&!l?(l=!0,d.addClass("top-fixed-header")):!p&&l&&(l=!1,d.removeClass("top-fixed-header")),!a&&$("#infographics").length&&m(f,"infographics",500)}()}function v(){screen.height;var e=document.documentElement.clientHeight;(e/t<=.75||t/e<=.75)&&($(".js-full-height").css("height",e),t=e)}}function chatbots(){null!==document.querySelector(".page-chatbots")&&$(document).ready(function(){(window.navigator.userAgent.indexOf("rv:11")>-1||window.navigator.userAgent.indexOf("Edge")>-1)&&$("body").addClass("ie11");var e,t,o,a=!1,n=$(window),i=window.innerHeight,s=window.innerWidth;window.devicePixelRatio;function r(){var e=document.getElementById("chatbot-pros__list").getBoundingClientRect().height;a&&$("#animation1-part").css("height",e),$(".heading-section").css("min-height",i-120)}for($("#parallax-section").length&&!0,(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<800)&&(a=!0,$("body").addClass("chatbots-mobile"),setTimeout(function(){r()},100)),n.on("resize",function(t){clearTimeout(e),e=setTimeout(function(){r()},250)}),t=0;t<$("[data-stagger]").length;t++)o=450*t,d($("[data-stagger='"+t+"']"),o);for(setTimeout(function(){for(var e=0;e<$("[data-faststagger]").length;e++)d($("[data-faststagger='"+e+"']"),0)},5e3),t=0;t<$("[data-faststagger]").length;t++)o=300*t+2500,d($('[data-faststagger="'+t+'"]'),o);for(t=0;t<$("[data-staggeranimation]").length;t++)o=300*t+2400,d($('[data-staggeranimation="'+t+'"]'),o,"animation-delay");for(t=0;t<$("[data-shortstagger]").length;t++)o=400*t,d($('[data-shortstagger="'+t+'"]'),o);function d(e,t,o){void 0===o&&(o="transition-delay"),e.css(o,t+"ms"),e.addClass("staggered")}var c=$("#chatbot-pros__list"),l=(c.height(),parseInt(c.css("padding-top"))+parseInt(c.css("padding-bottom"))+c.height()-i),u=n.scrollTop();u>l?$(".chatbots-top__heading").css("position","absolute"):$(".chatbots-top__heading").css("position","fixed");$("[data-get-in-touch]").on("click",function(e){e.preventDefault(),$("[data-menu]").removeClass("menu-opened"),$("body").removeClass("with-menu-opened"),!1;var t=parseInt($("#estimate-project-form").offset().top);$("html, body").animate({scrollTop:t-60},800),setTimeout(function(){!0},810)}),n.on("scroll",function(){u=n.scrollTop();var e=parseInt($(".chatbot-pros__list").css("padding-top"))+parseInt($(".chatbot-pros__list").css("padding-bottom"))+$(".chatbot-pros__list").height()-i;u>e?$(".chatbots-top__heading").css("position","absolute"):$(".chatbots-top__heading").css("position","fixed")})})}function popups(){function e(e){var t=$('[data-popup="'+e+'"]');t.addClass("popup-fixed"),$("body").addClass("has_popup"),"cookie"===e&&t[0].removeAttribute("aria-hidden")}$(document).ready(function(){if("true"!=function(e){for(var t=e+"=",o=decodeURIComponent(document.cookie).split(";"),a=0;a<o.length;a++){for(var n=o[a];" "===n.charAt(0);)n=n.substring(1);if(0===n.indexOf(t))return n.substring(t.length,n.length)}return""}("cookie_notice")&&!((t=navigator.userAgent).indexOf("FBAN")>-1||t.indexOf("FBAV")>-1||t.indexOf("FBIOS")>-1||t.indexOf("FB_IAB")>-1||t.indexOf("FB4A")>-1))if($("[data-exit-popup]").length&&!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))$(document).on("mouseleave",function(){e("cookie")});else{$('[data-popup="cookie"]').length&&setTimeout(function(){e("cookie")},500)}var t;$(document).on("click","[data-open-popup]",function(e){e.preventDefault();var t=$(this).attr("data-open-popup"),o=$('[data-popup="'+t+'"]');"team-video"===t&&(document.getElementById("team-video").src=$(".js-iframe-source").attr("data-source")),o.addClass("popup-fixed"),$("body").addClass("with-menu-opened")}),$(document).on("click","[data-close-popup]",function(e){e.preventDefault(),$("body").removeClass("with-menu-opened");var t=$(this).attr("data-close-popup"),o=$('[data-popup="'+t+'"]');o.removeClass("popup-fixed"),"team-video"===t?document.getElementById("team-video").src="":"cookie"===t&&($("body").removeClass("has_popup"),o[0].setAttribute("aria-hidden","true"),document.cookie&&(document.cookie="cookie_notice=true; expires=Thu, 26 Dec 2028 12:00:00 UTC; path=/"))})})}function portfolio(){if($("body").is(".page-portfolio")||$("#projects-list").length){var e=function(e){return e.split("?")};if($("[data-tabs-block]").length)if(window.location.hash){var t=e(window.location.hash.substring(1))[0];t.length<=1&&(t="all"),n(t);var o=parseInt(e(window.location.hash.substring(1))[1]);o>6&&i(o-6)}else n($("[data-tabs-block] [data-tabs-nav] > li.active").first().find("[data-tab-toggle]").attr("href").slice(1));$(document).on("click","[data-tab-toggle]",function(){var e=$(this),t=e.attr("href").slice(1),o=e.parent().attr("data-category"),i=$("#load-more");a(i.attr("data-hide-cat"),o)?i.hide():i.show(),n(t);var s=$(".tab-content.active li").length,r=t;return s>6&&(r+="?"+s),window.location.hash=r,!1}),$(document).on("click","#load-more",function(e){e.preventDefault(),$("#load-more").addClass("with-loader");i(6)}),$(document).ready(function(){if($("body").is(".page-portfolio")){var t,o,n,i=$("#load-more");window.location.hash?((t=e(window.location.hash)[0]).length<=1&&(t="#all"),n=(o=$('a[href="'+t+'"]')).length?o.parent().attr("data-category"):"all"):n="all",a(i.attr("data-hide-cat"),n)&&i.hide()}window.navigator.userAgent.indexOf("rv:11")>-1&&$("body").addClass("ie11"),s("to-inversion")})}function a(e,t){return e.indexOf(t)>=0}function n(e){var t=$("[data-tabs-block]"),o=t.find("[data-tabs-nav]");t.find("[data-tab-content]").removeClass("active").attr("aria-hidden","true").filter('[data-tab-content="'+e+'"]').addClass("active").removeAttr("aria-hidden"),o.children("li").removeClass("active"),o.find('[href="#'+e+'"]').closest("li").addClass("active")}function i(t){var o,a,n=$("li[data-category].active").attr("data-category"),i=$(".tab-content.active li").length;$.ajax({type:"POST",url:"/wp-admin/admin-ajax.php",data:{action:"load_projects",category_id:n,from_num:i,projects_count:t},success:function(t){(t=JSON.parse(t))&&$(".tab-content.active > .projects-list").append(t.project_html),t&&!t.projects_end||(a=$("#load-more"),o=a.attr("data-hide-cat"),a.attr("data-hide-cat",o+","+n).hide()),$("#load-more").removeClass("with-loader");var i=e(window.location.hash)[0];window.location.hash=i+"?"+$(".tab-content.active li").length,s("to-inversion")},error:function(e){$("#load-more").removeClass("with-loader")}})}function s(e){$("."+e).each(function(){var t,o="#333",a=$(this).parent("a").find(".project-item-description");void 0!==(t=$(this).css("background-color"))&&(o=function(e){var t=e,o="#ffffff";t=t.replace("rgb(","").replace(")","").split(",");for(var a=0,n=0;n<t.length;n++)a+=255-parseInt(t[n]);a<t.length/2*255&&(o="#333333");return o}(t)),a.css("color",o),this.classList.remove(e)})}}function projectSlider(){$(document).ready(function(){var e={margin:0,loop:!0,nav:!1,dots:!1,items:1,smartSpeed:100,mouseDrag:!0,touchDrag:!0,autoplay:!0,animateOut:"fadeOut",animateIn:"fadeIn",lazyLoad:!0,lazyLoadEager:1};if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(!0,e.mouseDrag=!1,e.touchDrag=!0),$(".projects-slider").length){var t=e;t.onInitialize=void $("."+"project-pager__item"+'[data-dote="0"]').addClass("active"),t.autoplayTimeout="5000";var o=$("#owl-projects-carousel");o.owlCarousel(t),o.on("translated.owl.carousel",function(e){var t,a;t="project-pager__item",a=parseInt(o.find(".owl-item.active .item").attr("data-dote")),$("."+t).removeClass("active").removeClass("done"),$("."+t+'[data-dote="'+a+'"]').addClass("active")}),o.on("dragged.owl.carousel",function(e){o.trigger("stop.owl.autoplay")}),$(".project-pager__item").click(function(){!function(e,t,o){$("."+e).removeClass("active"),o.trigger("to.owl.carousel",[t.index(),300]),$("."+e).hasClass("stopped")&&o.trigger("play.owl.autoplay",[5e3]);t.addClass("active stopped"),o.trigger("stop.owl.autoplay")}("project-pager__item",$(this),o)})}})}function scripts(){$(document).ready(function(){svg4everybody(),function(){if("undefined"!=typeof sessionStorage)try{var e;if(!sessionStorage.getItem("referrer"))e=void 0===document.referrer?"":document.referrer,sessionStorage.setItem("referrer",e);if(!sessionStorage.getItem("ads")){var t="none";location.search.indexOf("type")>=1&&(t="ads"),sessionStorage.setItem("ads",t)}var o="";sessionStorage.getItem("visited")&&(o=sessionStorage.getItem("visited"));var a=window.location.href;o=o+a+"\n",sessionStorage.setItem("visited",o)}catch(e){console.log("storage does not support")}}();var e=lozad(".lozad",{rootMargin:"1000px 0px",threshold:.5,load:function(e){e.src=e.dataset.src,e.onload=function(){e.classList.add("fadein")}}});e.observe();var t=document.querySelectorAll(".image-to-animate");e.triggerLoad(t)});var e=function(e){if(void 0===e){if($("body").removeClass("with-menu-opened"),!$(".no-touch").length){var t=parseInt($(".menu-opened").attr("data-offset"));$("html, body").scrollTop(Math.abs(t))}$("[data-menu]").removeClass("menu-opened").addClass("menu-closed"),$("[data-popup]").removeClass("popup-fixed"),$("#team-video").length&&(document.getElementById("team-video").src=""),$("#mc-embedded-subscribe-form").length&&(document.getElementById("mc-embedded-subscribe-form").reset(),$(".response").css("display","none"))}else e.removeClass("menu-opened").addClass("menu-closed")};function t(t,a,n){o(n,!0),"success"===t&&(n.find("input").css("display","none"),setTimeout(function(){e(),o(n)},2e3)),$("#mce-"+t+"-response").css("display","block").html(a)}function o(e,t){void 0===t&&(e.find('input[type="email"]').val(""),e.find('input[type="text"]').val("")),e.find("input").css("display","block"),document.getElementById("mc-embedded-subscribe").removeAttribute("disabled"),$(".response").html("").css("display","none")}$("#subscribe-block").on("click",function(t){!function(t,o){t.target.getAttribute("id")==o&&e()}(t,"subscribe-block")}),"undefined"!=typeof MOCDelayObjects&&MOCDelayObjects.length>0&&MOCDelayObjects.forEach(function(e){jQuery(e.element)[e.event].apply(null,e.options)}),$(document).on("touchstart",function(){$("body").removeClass("no-touch")}),$(".fixed-header .sub-menu").each(function(){var e=0,t=$(this);t.find("li").each(function(){e++}),e<2&&t.addClass("one-item");var o=t[0].getAttribute("id");$("."+o).find(".sub-menu").remove(),$("#"+o).appendTo($(".fixed-header ."+o))}),$("#mobile-nav .with-submenu").each(function(){$(this).hasClass("services-submenu")&&$(this)[0].setAttribute("data-open-menu","services"),$(this).hasClass("company-submenu")&&$(this)[0].setAttribute("data-open-menu","company"),$(this).hasClass("industries-submenu")&&$(this)[0].setAttribute("data-open-menu","industries")}),$(".menu-holder").addClass("menu-closed"),$(document).on("click",".with-submenu > a",function(e){if(e.preventDefault(),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){var t=$(this).parent("li");t.hasClass("active")?$(".with-submenu").each(function(){$(this).removeClass("active")}):($(".with-submenu").each(function(){$(this).removeClass("active")}),t.addClass("active"))}}),$(document).on("click","#zcwMiniButton",function(){$("body").addClass("with-menu-opened")}),$(document).on("click",".zcwPopup-close, .zcwPopup-bg",function(){$("body").removeClass("with-menu-opened")}),$(document).keyup(function(t){27===t.keyCode&&e()}),$(document).on("mouseenter",".with-submenu",function(e){$(this).addClass("active")}),$(document).on("mouseleave",".with-submenu",function(e){$(this).removeClass("active")}),$(document).on("click","[data-open-menu]",function(e){e.preventDefault();var o=$(this).attr("data-open-menu");return function(e){e.removeClass("menu-closed"),e.addClass("menu-opened");var o=$("body");if(!$(".no-touch").length){var a=o[0].getBoundingClientRect().top;e.attr("data-offset",a)}o.addClass("with-menu-opened"),$("#mc-embedded-subscribe").on("click",function(e){e.preventDefault();var o=$("#mce-EMAIL").val();if(/\S+@\S+\.\S+/.test(o)){var a=document.getElementById("mc-embedded-subscribe");a.setAttribute("disabled","disabled");var n=$("#mc-embedded-subscribe-form"),i=n.serialize(),s=n.attr("action");$.ajax({type:"GET",url:s,data:i,cache:!1,dataType:"json",contentType:"application/json; charset=utf-8",success:function(e){t(e.result,e.msg,n)},error:function(){t("error","Something went wrong. Please try later...",n)},complete:function(){a.removeAttribute("disabled")}})}else $("#mce-error-response").html("Please enter correct email").css("display","")})}($('[data-menu="'+o+'"]')),"subscribe"==o&&$(".mobile-email").focus(),"search"==o&&$("#search-field").focus(),!1}),$(document).on("click","[data-close-menu]",function(t){t.preventDefault();var o=$(this).attr("data-close-menu");"main"===o?e():e($('[data-menu="'+o+'"]')),$("[data-change-category]").removeClass("active"),$(this).addClass("active"),"search"==o&&($("#search-field").val(""),$("#displayed-ajax-search").html(""),$("#displayed-search-phrases").removeClass("hidden"))}),$(document).on("click","[data-change-category]",function(){var e=$(this),t=$("[data-selected-category]"),o=e.text();return t.text(o),!1}),$(".processes-list").length&&$(".processes-list__item").first().addClass("opened"),$(".processes-list__item").on("click, mouseover",function(){$(this).hasClass("opened")||($(".processes-list__item").removeClass("opened"),$(this).addClass("opened"))});var a=window.pageYOffset;$(window).scroll(function(){$(".with-submenu").each(function(){$(this).removeClass("active")}),$("#fixed-logo-wrapper").removeClass("logo-mocadellic"),function(){var e=window.pageYOffset;a>e+2||e<60?document.getElementById("top_bar").classList.remove("slide-up"):document.getElementById("top_bar").classList.add("slide-up");a=e}()}),$("[data-metrix]").on("click",function(){var e=$(this).attr("data-metrix");"undefined"!=typeof yaCounter32175069&&yaCounter32175069.reachGoal(e)})}jQuery("#search-field").keyup(function(e){jQuery(".search-spinner").show(),jQuery(".displayed-search-phrases").addClass("hidden"),jQuery(".displayed-ajax-search").empty(),jQuery(this).attr("autocomplete","off");var t=jQuery(this).val();delay(function(){searchPhrase(t)},2e3)}),$("#search-field").blur(function(){$(this).val()||jQuery(".search-spinner").hide()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
